version: '2.1'
services:
  admin-auth:
    container_name: kz__admin-auth
    build: ./services/admin-auth
    volumes:
      - './services/admin-auth:/usr/src/app'
      - './services/admin-auth/package.json:/usr/src/package.json'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=${NODE_ENV}
    env_file:
      - './env/admin-auth/node.env'
    depends_on:
      redis:
        condition: service_started
    links:
      - redis
  admin-web:
    container_name: kz__admin-web
    build: ./services/web-admin
    volumes:
      - './services/web-admin:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '3007:3007'
    env_file:
      - './env/admin-web/web.env'
    depends_on:
      admin-auth:
        condition: service_started
      details-catalog:
        condition: service_started
    links:
      - admin-auth
      - details-catalog
  details-catalog__db:
    container_name: kz__details-catalog__db
    restart: always
    build: ./services/details-catalog/src/db
    volumes:
       - ./postgres:/var/lib/postgresql/data
    ports: 
      - '5433:5432'
    env_file:
      - './env/details-catalog/pg.env'
    healthcheck:
      test: exit 0
  details-catalog:
    container_name: kz__details-catalog
    build: ./services/details-catalog
    volumes:
      - './services/details-catalog:/usr/src/app'
      - './services/admin-auth/package.json:/usr/src/package.json'
    ports:
      - '3030:3030'
    environment:
      - NODE_ENV=${NODE_ENV}
    env_file:
      - './env/details-catalog/node.env'
    depends_on:
      details-catalog__db:
        condition: service_healthy
    links:
      - details-catalog__db
      - admin-auth
  orders__db:
    container_name: kz__orders__db
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - './services/orders/db/mongo:/data/db'
  orders:
    container_name: kz__orders
    build: ./services/orders
    volumes:
      - './services/orders:/usr/src/app'
      - './services/orders/package.json:/usr/src/app/package.json'
    ports:
      - '3070:3070'
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=3070
    links:
      - orders__db
  market-web:
    container_name: kz__market-web
    build: ./services/web-market
    volumes:
      - './services/web-market:/usr/src/app'
      - './services/web-market/package.json:/usr/src/package.json'
    ports:
      - '3050:3050'
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=3050
    env_file:
      - './env/market-web/node.env'
    links:
      - details-catalog
  redis:
    container_name: redis__test
    image: redis
    restart: always
    ports:
      - '6379:6379'
    env_file:
      - './env/redis.env'
    volumes:
      - "./services/admin-auth/redis:/var/lib/redis"